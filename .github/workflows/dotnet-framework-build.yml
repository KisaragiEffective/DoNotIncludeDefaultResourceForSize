name: Build on .NET Framework

on:
  pull_request:
    branches: [ "master" ]
    paths:
      - "**/*.cs"
      - "**/*.csproj"
      - "**/*.sln"
      - ".github/workflows/dotnet-framework-build.yml"
  push:
    tags:
      - 'v*'
jobs:
  build:
    permissions:
      contents: write
    strategy:
      matrix:
        configuration: [Debug, Release]

    runs-on: windows-latest  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      Solution_Name: DoNotIncludeDefaultResourceForSize         # Replace with your solution name, i.e. MyWpfApp.sln.
    # Test_Project_Path: your-test-project-path                 # Replace with the path to your test project, i.e. MyWpfApp.Tests\MyWpfApp.Tests.csproj.
    # Wap_Project_Directory: your-wap-project-directory-name    # Replace with the Wap project directory relative to the solution, i.e. MyWpfApp.Package.
    # Wap_Project_Path: your-wap-project-path                   # Replace with the path to your Wap project, i.e. MyWpf.App.Package\MyWpfApp.Package.wapproj.
      ClientInstallDestination: 'C:\Neos\app'
      NeosModLoaderVersion: '1.12.5'
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    # !! .NET Framework is already installed, see https://github.com/actions/setup-dotnet/issues/296
    # - name: Install .NET Core
    #  uses: actions/setup-dotnet@v3
    #  with:
    #    dotnet-version: 6.0.x

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.3.1

    # Execute all unit tests in the solution
    # - name: Execute unit tests
    #  run: dotnet test

    # Restore the application to populate the obj folder with RuntimeIdentifiers
    - name: Restore the application
      run: msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}
    - name: Create destination directory
      run: New-Item -Type Directory $env:ClientInstallDestination
    # NOTE: 7zip is already present, see https://github.com/actions/runner-images/issues/905
    - name: Fetch and place Neos client
      run: |
        $latest_version=$(Invoke-WebRequest -ErrorAction:Stop https://assets.neos.com/install/Pro/Public)
        $temp=New-TemporaryFile | % { $_.FullName }
        Invoke-WebRequest "https://assets.neos.com/install/Pro/Data/${latest_version}.7z" -OutFile $temp
        7z x $temp "-o$env:ClientInstallDestination"
        $? || { throw "7z command was failed" }.Invoke()
        Remove-Item $temp
        Get-ChildItem -R $env:ClientInstallDestination
    - name: Fetch and place NeosModLoader
      run: |
        $nml_libs=Join-Path $env:ClientInstallDestination nml_libs
        New-Item -Type Directory $nml_libs
        $harmony_dll=Join-Path $nml_libs "0Harmony.dll"
        Invoke-WebRequest "https://github.com/neos-modding-group/NeosModLoader/releases/download/${env:NeosModLoaderVersion}/0Harmony.dll" -OutFile $harmony_dll
        $nml_dll=Join-Path $env:ClientInstallDestination Libraries NeosModLoader.dll
        Invoke-WebRequest "https://github.com/neos-modding-group/NeosModLoader/releases/download/${env:NeosModLoaderVersion}/NeosModLoader.dll" -OutFile $nml_dll
        # There are no signatures, skipping verification
    - name: Build
      run: |
        Get-ChildItem | ? { $_.extension -eq ".sln" } | % { msbuild $_.Name /t:Build /m /p:Configuration=$env:Configuration }
      env:
        Configuration: ${{ matrix.configuration }}
    - name: Compute Hash
      if: github.ref_type == 'tag'
      run: |
        Write-Output $env:GITHUB_WORKSPACE
        function Handle($path) {
          $path = Join-Path $env:GITHUB_WORKSPACE $env:Solution_Name $path
          if (-not [System.IO.File]::Exists($path)) {
            Write-Output "No such $path"
            return
          }
          
          Write-Output "Hit: $path"
          
          $Bytes = [System.IO.File]::ReadAllBytes($path)
          Add-Type -AssemblyName System.Security
          $SHA = New-Object System.Security.Cryptography.SHA512CryptoServiceProvider
          $HashBytes = $SHA.ComputeHash($Bytes)
          $SHA.Dispose()
          $HashString = ""
          foreach( $HashByte in $HashBytes ){
            $HashString += $HashByte.ToString("x2")
          }
          
          $HashFileDestination = dir $path | % { $_.FullName + ".sha512sum" }
          $OriginalFileName = dir $path | % { $_.Name }
          Write-Output "$HashString  $OriginalFileName" | Set-Content -Encoding UTF8 $HashFileDestination
        }
        
        Handle $(Join-Path obj ${{ matrix.configuration }} DoNotIncludeDefaultResourceForSize.dll)
        Handle $(Join-Path obj ${{ matrix.configuration }} DoNotIncludeDefaultResourceForSize.pdb)
    - name: Restructure path
      run: |
        $Files=@(
          "DoNotIncludeDefaultResourceForSize.dll",
          "DoNotIncludeDefaultResourceForSize.dll.sha512sum",
          "DoNotIncludeDefaultResourceForSize.pdb",
          "DoNotIncludeDefaultResourceForSize.pdb.sha512sum"
        )
        $BasePath=Join-Path $env:GITHUB_WORKSPACE $env:Solution_Name obj ${{ matrix.configuration }}
        foreach ($File in $Files) {
          $FilePath=$(Join-Path $BasePath $File)
          $Base=dir $FilePath | % { $_.BaseName }
          $Ext=dir $FilePath | % { $_.Extension }
          $NewFileName=$Base + "-${{ matrix.configuration }}" + $Ext
          $SourceFile=Join-Path $BasePath $File
          $DestFile=Join-Path $BasePath $NewFileName
          echo "$SourceFile -> $DestFile"
          Move-Item $SourceFile $DestFile
        }        
    - name: Get current tag
      if: github.ref_type == 'tag'
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
    - name: Release
      uses: softprops/action-gh-release@v0.1.13
      if: github.ref_type == 'tag'
      with:
        tag_name: ${{ env.RELEASE_VERSION }}
        # only warn when non-existent, no error
        files: |
          ${{ github.workspace }}\${{ env.Solution_Name }}\obj\${{ matrix.configuration }}\DoNotIncludeDefaultResourceForSize-${{ matrix.configuration }}.dll
          ${{ github.workspace }}\${{ env.Solution_Name }}\obj\${{ matrix.configuration }}\DoNotIncludeDefaultResourceForSize-${{ matrix.configuration }}.pdb
          ${{ github.workspace }}\${{ env.Solution_Name }}\obj\${{ matrix.configuration }}\DoNotIncludeDefaultResourceForSize-${{ matrix.configuration }}.dll.sha512sum
          ${{ github.workspace }}\${{ env.Solution_Name }}\obj\${{ matrix.configuration }}\DoNotIncludeDefaultResourceForSize-${{ matrix.configuration }}.pdb.sha512sum
